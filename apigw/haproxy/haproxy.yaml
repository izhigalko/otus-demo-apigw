---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-config
  labels:
    app: gateway
data:
  haproxy.cfg: |
    global
      log stdout format raw local0

    resolvers mydns
      parse-resolv-conf
      hold valid 60s

    defaults
      log     global
      mode    http

      option  httplog
      option  dontlognull
      option redispatch
      option forwardfor

      retries 3
      timeout connect  5000
      timeout client  10000
      timeout server  10000

    frontend gateway
      bind *:8080

      acl auth_acl path -i -m beg /auth
      use_backend auth-service if auth_acl

      default_backend echoserver

    backend echoserver
      server s1 echoserver.default.svc.cluster.local:80 check resolvers mydns

    backend auth-service
      http-request replace-path /auth/?(.*) /\1
      server s1 auth-service.default.svc.cluster.local:80 check resolvers mydns

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: default
  labels:
    app: gateway
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      volumes:
        - name: haproxy-config
          configMap:
            name: gateway-config
      containers:
        - name: gateway
          image: "haproxy:2.3"
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
          - name: haproxy-config
            mountPath: /usr/local/etc/haproxy

---
apiVersion: v1
kind: Service
metadata:
  name: gateway
spec:
  type: NodePort
  selector:
    app: gateway
  ports:
    - port: 80
      name: http
      targetPort: http